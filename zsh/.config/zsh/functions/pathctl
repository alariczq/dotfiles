usage() {
    printf "for manage PATH environment variable

COMMAND:
  ls                  list PATHs
  rm   [path]         remove current dir from PATHs; default: $(pwd)
  add                 add current dir to PATHs
  tidy [-delete]      check invalid path and delete
  edit                use \${EDITOR:-vim} editor open the env file; default: $EDITOR
"
}

local env_file=${ENV_FILE:-$ZDOTDIR/.env}

list_paths() {
  sed -e 's/\(.*\)#.*/\1/g' -e '/^$/d' $env_file
}

remove_path() {
  cat $env_file | sed -e "s|^$1\( *#.*\)*\$||" -e '/^$/d' | tee $env_file >/dev/null
}

filter_path() {
  local cwd="$1"
  if [[ "$cwd" == "" ]]; then
    cwd=$(pwd)
  fi

  if [[ "$cwd" =~ "^$HOME" ]]; then
    cwd=$(echo $cwd | sed "s#^$HOME#\$HOME#")
  fi

  echo $cwd
}

main() {
  local cmd=$1
  if (( $# > 0 )); then
    shift
  fi

  case $cmd in
    rm)
      remove_path $(filter_path "$1")
    ;;

    ls)
      cat $env_file
    ;;

    add)
      local cwd=$(filter_path)

      # remove the item
      if [[ ! $(list_paths | grep "^${cwd}*\$" ) ]]; then
        remove_path $cwd
      fi

      export PATH=$PATH:$cwd

      # add comment for path
      if [[ "$1" != "" ]]; then
        echo "$cwd # $@" >> $env_file
      else
        echo $cwd >> $env_file
      fi
    ;;

    tidy)
      while read target; do

        if [[ ! -d $(sh -c "echo $target")  ]]; then

          if [[ "$1" == "-delete" ]]; then
            remove_path "$target" 
            echo "Removed invalid path \"$target\""
          else
            echo "\"$target\" is invalid path"
          fi
        fi

      done < <(echo "$(list_paths)")
    ;;

    edit)
      ${EDITOR:-vim} $env_file
    ;;

    *)
     usage 
    ;;
  esac
}

main "$@"
